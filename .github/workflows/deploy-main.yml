name: Build and deploy

on:
  push:
    branches: [ main ]

env:
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}

jobs:
  build-deploy-main:
    runs-on: ubuntu-latest
    environment: jorib-backend

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      # Node.js 셋업 및 React 빌드
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies & build Next.js
        working-directory: ./joribhaejo-next
        run: |
          npm install
          npm run build
          npm run export

      # React 빌드 결과를 Spring Boot static 리소스 위치로 복사
      - name: Copy React build files to Spring Boot static resources
        run: |
          rm -rf ./joribhaejo-spring/src/main/resources/static/*
          cp -r ./joribhaejo-next/out/* ./joribhaejo-spring/src/main/resources/static/

      # Java 환경 셋업 및 Spring Boot 빌드
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Grant execute permission to gradlew
        working-directory: ./joribhaejo-spring
        run: chmod +x ./gradlew

      - name: Build Spring Boot JAR
        working-directory: ./joribhaejo-spring
        run: ./gradlew bootJar

      # 도커 로그인 및 이미지 빌드/푸시
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        working-directory: ./joribhaejo-spring
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:latest .
          docker push ${{ env.IMAGE_NAME }}:latest

      # EC2 배포 (도커 컴포즈 업)
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /opt/jorib/
            sudo docker compose pull
            sudo docker compose up -d
